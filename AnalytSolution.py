# -*- coding: utf-8 -*-
"""
Created on Fri Feb 11 16:30:44 2022

У Васи, Коли и Пети есть традиция: каждый год к 31-му декабря они выбирают интересный финтех-стартап, собираются вместе в кафе и играют в простую игру. Правила игры такие:

 1) вытянувший жребий игрок (назовём его «первым») открывает счёт в этом стартапе, и каждый игрок, включая его самого, переводит ему по 1000 рублей из своего банка — без комиссии;
  2) два других игрока тоже открывают себе счета в этом стартапе (после этого у первого игрока на счете 3000 рублей, а у остальных — по 0 рублей);
 3) начинаются раунды: каждый раз все три игрока ещё раз тянут жребий, и игрок с деньгами на счету делает перевод всех средств вытянувшему;
 4) игра прекращается в тот момент, когда деньги возвращаются первому игроку;
 5) если на первом раунде жребий вытягивает первый игрок, игра останавливается сразу же.

 Тот, на ком завершился последний раунд, побеждает, и первый игрок покупает ему подарок на все деньги со счёта.

 В этом году Вася, Коля и Петя выбрали АналитБанк. Главная технологическая особенность этого банка в том, что суммы всех комиссий и начислений рассчитываются аналитически, без округлений. Для того, чтобы обеспечить такую точность расчётов, АналитБанк удерживает комиссию за переводы между пользователями в размере 5% от суммы перевода. За пополнения счёта извне комиссий нет.

 У Маши, Лены и Нади есть такая же традиция, но они в этом году выбрали Яндекс.Банк, в котором комиссий нет ни за пополнения извне, ни за переводы между клиентами.

 Каково математическое ожидание суммы в рублях, сэкономленной на комиссиях Машей, Леной и Надей, по сравнению с Васей, Колей и Петей?

 В дробной части ответа оставьте 6 первых цифр. Разделитель — точка. Пример: 999.999999

"""

import numpy as np

k = 0.05
S0 = 3000
p0 = 2 / 9
K = []
K0 = S0 * k  
K1 = S0 * k * (1-k)

kSum = K0 + K1
add =  p0 * kSum
summ = add
print('summ= {:.6f} '.format(summ))

iter = 3

while add > 0.000000001:
    pi = (1/3) * (2/3)**(iter-1)
    kAdd = S0 * k * (1-k)**(iter-1)
    kSum += kAdd
    add = pi * kSum
    summ += add
    print('iter= {}, pi={:.6f}, kAdd={:.6f}, pi*kSum={:.6f}, summ={:.8f} '.format(iter, pi, kAdd, pi * kSum, summ))
    iter += 1
    